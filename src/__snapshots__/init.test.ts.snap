// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`init should handle many functions and map each one to an event handler 1`] = `
Array [
  Array [
    Array [
      Object {
        "content": "ping",
      },
    ],
    Array [
      Object {
        "callback": [MockFunction],
        "condition": [MockFunction],
      },
      Object {
        "callback": [MockFunction],
        "condition": [MockFunction],
        "event": "messageCreate",
      },
    ],
    Object {
      "client": Object {
        "application": Object {
          "id": "mock-application-id",
        },
        "on": [MockFunction] {
          "calls": Array [
            Array [
              "messageCreate",
              [Function],
            ],
            Array [
              "channelCreate",
              [Function],
            ],
            Array [
              "messageDelete",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      "functions": Array [
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "channelCreate",
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "messageCreate",
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "messageDelete",
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "channelCreate",
        },
      ],
    },
  ],
  Array [
    Array [
      Object {
        "content": "ping",
      },
    ],
    Array [
      Object {
        "callback": [MockFunction],
        "condition": [MockFunction],
        "event": "channelCreate",
      },
      Object {
        "callback": [MockFunction],
        "condition": [MockFunction],
        "event": "channelCreate",
      },
    ],
    Object {
      "client": Object {
        "application": Object {
          "id": "mock-application-id",
        },
        "on": [MockFunction] {
          "calls": Array [
            Array [
              "messageCreate",
              [Function],
            ],
            Array [
              "channelCreate",
              [Function],
            ],
            Array [
              "messageDelete",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      "functions": Array [
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "channelCreate",
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "messageCreate",
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "messageDelete",
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "channelCreate",
        },
      ],
    },
  ],
  Array [
    Array [
      Object {
        "content": "ping",
      },
    ],
    Array [
      Object {
        "callback": [MockFunction],
        "condition": [MockFunction],
        "event": "messageDelete",
      },
    ],
    Object {
      "client": Object {
        "application": Object {
          "id": "mock-application-id",
        },
        "on": [MockFunction] {
          "calls": Array [
            Array [
              "messageCreate",
              [Function],
            ],
            Array [
              "channelCreate",
              [Function],
            ],
            Array [
              "messageDelete",
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      "functions": Array [
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "channelCreate",
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "messageCreate",
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "messageDelete",
        },
        Object {
          "callback": [MockFunction],
          "condition": [MockFunction],
          "event": "channelCreate",
        },
      ],
    },
  ],
]
`;
